@model IEnumerable<Vraze.Models.GameSession>
@{ ViewData["Title"] = "Session Management Page"; }

<div class="text-left">
    <h1 class="display-4">Challenge Management</h1>
</div>
<div class="d-flex flex-row-reverse mb-2">
    <a class="btn btn-info" asp-action="Create" asp-controller="GameSession">Add New Game Session</a>
</div>
<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Game Session Id</th>
                <th scope="col">Access Code</th>
                <th scope="col">Challenges</th>
                <th scope="col">Student List</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>@item.Id</td>
                <td>@item.AccessCode</td>
                <td>@item.ChallengeList</td>
                <td>@item.StudentList</td>
                <td><a asp-action="Edit" asp-route-id="@item.Id" class="card-link">Edit</a><span id="btnDelete" data-content="@item.Id" class="btn btn-info">Remove</span></td>
            </tr>
       }
        </tbody>
    </table>
</div>

@*<script>$(document).ready(function () {
        $("#btnDelete").click(function () {
            console.log($(this).attr('data-content'));
            var apiUri = './Delete/' + $(this).attr('data-content');
            var messagePopupTitle = 'Are you sure you want to delete the Challenge with ID:' + $(this).attr('data-content');

            Swal.fire({
                title: messagePopupTitle,
                showCancelButton: true,
                cancelButtonText: 'No',
                confirmButtonText: 'Yes',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch(apiUri)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            console.log("respone: ", response);
                            location.replace('/Challenge/Manage');
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            });
        });
    });</script>*@